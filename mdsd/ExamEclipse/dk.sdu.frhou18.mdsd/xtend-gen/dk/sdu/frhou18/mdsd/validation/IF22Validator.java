/**
 * generated by Xtext 2.26.0
 */
package dk.sdu.frhou18.mdsd.validation;

import com.google.common.base.Objects;
import dk.sdu.frhou18.mdsd.iF22.End;
import dk.sdu.frhou18.mdsd.iF22.Function;
import dk.sdu.frhou18.mdsd.iF22.IF22Package;
import dk.sdu.frhou18.mdsd.iF22.Model;
import dk.sdu.frhou18.mdsd.iF22.Scenario;
import dk.sdu.frhou18.mdsd.iF22.Statement;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IterableExtensions;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class IF22Validator extends AbstractIF22Validator {
  public static final String DUPLICATE_NAME = "duplicateName";
  
  @Check
  public void checkFunctionNameNotDuplicate(final Function function) {
    Model base = EcoreUtil2.<Model>getContainerOfType(function, Model.class);
    final Function1<Function, Boolean> _function = (Function f) -> {
      return Boolean.valueOf(((f != function) && Objects.equal(f.getName(), function.getName())));
    };
    int _size = IterableExtensions.<Function>toList(IterableExtensions.<Function>filter(base.getFunctions(), _function)).size();
    boolean _greaterThan = (_size > 0);
    if (_greaterThan) {
      this.error("Functions are not allowed to have the same name", IF22Package.Literals.FUNCTION__NAME, IF22Validator.DUPLICATE_NAME);
    }
  }
  
  public static final String AT_LEAST_ONE_END = "atLeastOneEnd";
  
  @Check
  public void atLeastOneEndStatement(final Scenario sc) {
    final Function1<Statement, Boolean> _function = (Statement st) -> {
      return Boolean.valueOf((st instanceof End));
    };
    int _size = IterableExtensions.<Statement>toList(IterableExtensions.<Statement>filter(sc.getStatemens(), _function)).size();
    boolean _equals = (_size == 0);
    if (_equals) {
      this.error("A scenario should have at least one end statement", IF22Package.Literals.SCENARIO__STATEMENS, IF22Validator.AT_LEAST_ONE_END);
    }
  }
}
