/*
 * generated by Xtext 2.26.0
 */
package dk.sdu.frhou18.mdsd.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import dk.sdu.frhou18.mdsd.iF22.Model
import dk.sdu.frhou18.mdsd.generator.subgenerators.GameGenerator
import dk.sdu.frhou18.mdsd.generator.subgenerators.ScenarioGenerator
import dk.sdu.frhou18.mdsd.generator.subgenerators.ExternalGenerator

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class IF22Generator extends AbstractGenerator {

	String pkg = "interactive_fiction"
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val model = resource.allContents.filter(Model).next
		val storyName = model.storyName.name
		val scenarios = model.scenarios
		
		GameGenerator.doGenerate(fsa, pkg, model, storyName, scenarios);
		if(model.functions.length > 0)
		ExternalGenerator.doGenerate(fsa,pkg,model,storyName,scenarios)
		for(scenario : scenarios){
			ScenarioGenerator.doGenerate(fsa, pkg, model, storyName, scenario)
		}
	}
	def public static String snakeCase(String input){
		return input.split("(?=\\p{Upper})").join('_').toLowerCase
	}
}
