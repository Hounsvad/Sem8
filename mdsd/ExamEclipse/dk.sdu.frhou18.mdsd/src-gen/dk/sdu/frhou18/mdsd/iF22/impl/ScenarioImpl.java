/**
 * generated by Xtext 2.26.0
 */
package dk.sdu.frhou18.mdsd.iF22.impl;

import dk.sdu.frhou18.mdsd.iF22.IF22Package;
import dk.sdu.frhou18.mdsd.iF22.Scenario;
import dk.sdu.frhou18.mdsd.iF22.Statement;
import dk.sdu.frhou18.mdsd.iF22.VariableDef;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Scenario</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dk.sdu.frhou18.mdsd.iF22.impl.ScenarioImpl#getVariables <em>Variables</em>}</li>
 *   <li>{@link dk.sdu.frhou18.mdsd.iF22.impl.ScenarioImpl#getStatemens <em>Statemens</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ScenarioImpl extends TargetTargetImpl implements Scenario
{
  /**
   * The cached value of the '{@link #getVariables() <em>Variables</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariables()
   * @generated
   * @ordered
   */
  protected EList<VariableDef> variables;

  /**
   * The cached value of the '{@link #getStatemens() <em>Statemens</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatemens()
   * @generated
   * @ordered
   */
  protected EList<Statement> statemens;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ScenarioImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IF22Package.Literals.SCENARIO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VariableDef> getVariables()
  {
    if (variables == null)
    {
      variables = new EObjectContainmentEList<VariableDef>(VariableDef.class, this, IF22Package.SCENARIO__VARIABLES);
    }
    return variables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Statement> getStatemens()
  {
    if (statemens == null)
    {
      statemens = new EObjectContainmentEList<Statement>(Statement.class, this, IF22Package.SCENARIO__STATEMENS);
    }
    return statemens;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IF22Package.SCENARIO__VARIABLES:
        return ((InternalEList<?>)getVariables()).basicRemove(otherEnd, msgs);
      case IF22Package.SCENARIO__STATEMENS:
        return ((InternalEList<?>)getStatemens()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IF22Package.SCENARIO__VARIABLES:
        return getVariables();
      case IF22Package.SCENARIO__STATEMENS:
        return getStatemens();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IF22Package.SCENARIO__VARIABLES:
        getVariables().clear();
        getVariables().addAll((Collection<? extends VariableDef>)newValue);
        return;
      case IF22Package.SCENARIO__STATEMENS:
        getStatemens().clear();
        getStatemens().addAll((Collection<? extends Statement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IF22Package.SCENARIO__VARIABLES:
        getVariables().clear();
        return;
      case IF22Package.SCENARIO__STATEMENS:
        getStatemens().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IF22Package.SCENARIO__VARIABLES:
        return variables != null && !variables.isEmpty();
      case IF22Package.SCENARIO__STATEMENS:
        return statemens != null && !statemens.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ScenarioImpl
