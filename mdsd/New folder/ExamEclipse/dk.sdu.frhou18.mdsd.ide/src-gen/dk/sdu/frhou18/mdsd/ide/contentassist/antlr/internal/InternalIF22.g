/*
 * generated by Xtext 2.26.0
 */
grammar InternalIF22;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.frhou18.mdsd.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.frhou18.mdsd.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.frhou18.mdsd.services.IF22GrammarAccess;

}
@parser::members {
	private IF22GrammarAccess grammarAccess;

	public void setGrammarAccess(IF22GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStory
entryRuleStory
:
{ before(grammarAccess.getStoryRule()); }
	 ruleStory
{ after(grammarAccess.getStoryRule()); } 
	 EOF 
;

// Rule Story
ruleStory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoryAccess().getGroup()); }
		(rule__Story__Group__0)
		{ after(grammarAccess.getStoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenario
entryRuleScenario
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioAccess().getGroup()); }
		(rule__Scenario__Group__0)
		{ after(grammarAccess.getScenarioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnd
entryRuleEnd
:
{ before(grammarAccess.getEndRule()); }
	 ruleEnd
{ after(grammarAccess.getEndRule()); } 
	 EOF 
;

// Rule End
ruleEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndAccess().getGroup()); }
		(rule__End__Group__0)
		{ after(grammarAccess.getEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnounce
entryRuleAnnounce
:
{ before(grammarAccess.getAnnounceRule()); }
	 ruleAnnounce
{ after(grammarAccess.getAnnounceRule()); } 
	 EOF 
;

// Rule Announce
ruleAnnounce 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnounceAccess().getGroup()); }
		(rule__Announce__Group__0)
		{ after(grammarAccess.getAnnounceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuestion
entryRuleQuestion
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuestionAccess().getGroup()); }
		(rule__Question__Group__0)
		{ after(grammarAccess.getQuestionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDef
entryRuleVariableDef
:
{ before(grammarAccess.getVariableDefRule()); }
	 ruleVariableDef
{ after(grammarAccess.getVariableDefRule()); } 
	 EOF 
;

// Rule VariableDef
ruleVariableDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDefAccess().getGroup()); }
		(rule__VariableDef__Group__0)
		{ after(grammarAccess.getVariableDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTarget
entryRuleTarget
:
{ before(grammarAccess.getTargetRule()); }
	 ruleTarget
{ after(grammarAccess.getTargetRule()); } 
	 EOF 
;

// Rule Target
ruleTarget 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTargetAccess().getGroup()); }
		(rule__Target__Group__0)
		{ after(grammarAccess.getTargetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThis
entryRuleThis
:
{ before(grammarAccess.getThisRule()); }
	 ruleThis
{ after(grammarAccess.getThisRule()); } 
	 EOF 
;

// Rule This
ruleThis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThisAccess().getGroup()); }
		(rule__This__Group__0)
		{ after(grammarAccess.getThisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicExp
entryRuleLogicExp
:
{ before(grammarAccess.getLogicExpRule()); }
	 ruleLogicExp
{ after(grammarAccess.getLogicExpRule()); } 
	 EOF 
;

// Rule LogicExp
ruleLogicExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup()); }
		(rule__LogicExp__Group__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicAndOR
entryRuleLogicAndOR
:
{ before(grammarAccess.getLogicAndORRule()); }
	 ruleLogicAndOR
{ after(grammarAccess.getLogicAndORRule()); } 
	 EOF 
;

// Rule LogicAndOR
ruleLogicAndOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicAndORAccess().getGroup()); }
		(rule__LogicAndOR__Group__0)
		{ after(grammarAccess.getLogicAndORAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicNot
entryRuleLogicNot
:
{ before(grammarAccess.getLogicNotRule()); }
	 ruleLogicNot
{ after(grammarAccess.getLogicNotRule()); } 
	 EOF 
;

// Rule LogicNot
ruleLogicNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicNotAccess().getGroup()); }
		(rule__LogicNot__Group__0)
		{ after(grammarAccess.getLogicNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParentheses
entryRuleParentheses
:
{ before(grammarAccess.getParenthesesRule()); }
	 ruleParentheses
{ after(grammarAccess.getParenthesesRule()); } 
	 EOF 
;

// Rule Parentheses
ruleParentheses 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesesAccess().getGroup()); }
		(rule__Parentheses__Group__0)
		{ after(grammarAccess.getParenthesesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean
entryRuleBoolean
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanAccess().getGroup()); }
		(rule__Boolean__Group__0)
		{ after(grammarAccess.getBooleanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathExp
entryRuleMathExp
:
{ before(grammarAccess.getMathExpRule()); }
	 ruleMathExp
{ after(grammarAccess.getMathExpRule()); } 
	 EOF 
;

// Rule MathExp
ruleMathExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathExpAccess().getGroup()); }
		(rule__MathExp__Group__0)
		{ after(grammarAccess.getMathExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultDivMathExp
entryRuleMultDivMathExp
:
{ before(grammarAccess.getMultDivMathExpRule()); }
	 ruleMultDivMathExp
{ after(grammarAccess.getMultDivMathExpRule()); } 
	 EOF 
;

// Rule MultDivMathExp
ruleMultDivMathExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultDivMathExpAccess().getGroup()); }
		(rule__MultDivMathExp__Group__0)
		{ after(grammarAccess.getMultDivMathExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathNumberExp
entryRuleMathNumberExp
:
{ before(grammarAccess.getMathNumberExpRule()); }
	 ruleMathNumberExp
{ after(grammarAccess.getMathNumberExpRule()); } 
	 EOF 
;

// Rule MathNumberExp
ruleMathNumberExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathNumberExpAccess().getGroup()); }
		(rule__MathNumberExp__Group__0)
		{ after(grammarAccess.getMathNumberExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextExp
entryRuleTextExp
:
{ before(grammarAccess.getTextExpRule()); }
	 ruleTextExp
{ after(grammarAccess.getTextExpRule()); } 
	 EOF 
;

// Rule TextExp
ruleTextExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextExpAccess().getGroup()); }
		(rule__TextExp__Group__0)
		{ after(grammarAccess.getTextExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionUsage
entryRuleFunctionUsage
:
{ before(grammarAccess.getFunctionUsageRule()); }
	 ruleFunctionUsage
{ after(grammarAccess.getFunctionUsageRule()); } 
	 EOF 
;

// Rule FunctionUsage
ruleFunctionUsage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionUsageAccess().getGroup()); }
		(rule__FunctionUsage__Group__0)
		{ after(grammarAccess.getFunctionUsageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextLiteral
entryRuleTextLiteral
:
{ before(grammarAccess.getTextLiteralRule()); }
	 ruleTextLiteral
{ after(grammarAccess.getTextLiteralRule()); } 
	 EOF 
;

// Rule TextLiteral
ruleTextLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextLiteralAccess().getGroup()); }
		(rule__TextLiteral__Group__0)
		{ after(grammarAccess.getTextLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarUse
entryRuleVarUse
:
{ before(grammarAccess.getVarUseRule()); }
	 ruleVarUse
{ after(grammarAccess.getVarUseRule()); } 
	 EOF 
;

// Rule VarUse
ruleVarUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarUseAccess().getGroup()); }
		(rule__VarUse__Group__0)
		{ after(grammarAccess.getVarUseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeUsage
entryRuleTypeUsage
:
{ before(grammarAccess.getTypeUsageRule()); }
	 ruleTypeUsage
{ after(grammarAccess.getTypeUsageRule()); } 
	 EOF 
;

// Rule TypeUsage
ruleTypeUsage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeUsageAccess().getGroup()); }
		(rule__TypeUsage__Group__0)
		{ after(grammarAccess.getTypeUsageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Type
ruleType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BooleanValue
ruleBooleanValue
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getAlternatives()); }
		(rule__BooleanValue__Alternatives)
		{ after(grammarAccess.getBooleanValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getEndParserRuleCall_0()); }
		ruleEnd
		{ after(grammarAccess.getStatementAccess().getEndParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAnnounceParserRuleCall_1()); }
		ruleAnnounce
		{ after(grammarAccess.getStatementAccess().getAnnounceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getQuestionParserRuleCall_2()); }
		ruleQuestion
		{ after(grammarAccess.getStatementAccess().getQuestionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_0_0()); }
		(rule__LogicExp__Group_1_0_0__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_0_1()); }
		(rule__LogicExp__Group_1_0_1__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_0_2()); }
		(rule__LogicExp__Group_1_0_2__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_0_3()); }
		(rule__LogicExp__Group_1_0_3__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_0_4()); }
		(rule__LogicExp__Group_1_0_4__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpAccess().getGroup_1_0_5()); }
		(rule__LogicExp__Group_1_0_5__0)
		{ after(grammarAccess.getLogicExpAccess().getGroup_1_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAndORAccess().getGroup_1_0_0()); }
		(rule__LogicAndOR__Group_1_0_0__0)
		{ after(grammarAccess.getLogicAndORAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicAndORAccess().getGroup_1_0_1()); }
		(rule__LogicAndOR__Group_1_0_1__0)
		{ after(grammarAccess.getLogicAndORAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathExpAccess().getGroup_1_0_0()); }
		(rule__MathExp__Group_1_0_0__0)
		{ after(grammarAccess.getMathExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMathExpAccess().getGroup_1_0_1()); }
		(rule__MathExp__Group_1_0_1__0)
		{ after(grammarAccess.getMathExpAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivMathExpAccess().getGroup_1_0_0()); }
		(rule__MultDivMathExp__Group_1_0_0__0)
		{ after(grammarAccess.getMultDivMathExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultDivMathExpAccess().getGroup_1_0_1()); }
		(rule__MultDivMathExp__Group_1_0_1__0)
		{ after(grammarAccess.getMultDivMathExpAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getFunctionUsageParserRuleCall_0()); }
		ruleFunctionUsage
		{ after(grammarAccess.getPrimaryAccess().getFunctionUsageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getLogicNotParserRuleCall_1()); }
		ruleLogicNot
		{ after(grammarAccess.getPrimaryAccess().getLogicNotParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getBooleanParserRuleCall_2()); }
		ruleBoolean
		{ after(grammarAccess.getPrimaryAccess().getBooleanParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getParenthesesParserRuleCall_3()); }
		ruleParentheses
		{ after(grammarAccess.getPrimaryAccess().getParenthesesParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getThisParserRuleCall_4()); }
		ruleThis
		{ after(grammarAccess.getPrimaryAccess().getThisParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getMathNumberExpParserRuleCall_5()); }
		ruleMathNumberExp
		{ after(grammarAccess.getPrimaryAccess().getMathNumberExpParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getTextLiteralParserRuleCall_6()); }
		ruleTextLiteral
		{ after(grammarAccess.getPrimaryAccess().getTextLiteralParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getVarUseParserRuleCall_7()); }
		ruleVarUse
		{ after(grammarAccess.getPrimaryAccess().getVarUseParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getTypeUsageParserRuleCall_8()); }
		ruleTypeUsage
		{ after(grammarAccess.getPrimaryAccess().getTypeUsageParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getBooleanEnumLiteralDeclaration_0()); }
		('boolean')
		{ after(grammarAccess.getTypeAccess().getBooleanEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTextEnumLiteralDeclaration_1()); }
		('text')
		{ after(grammarAccess.getTypeAccess().getTextEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNumberEnumLiteralDeclaration_2()); }
		('number')
		{ after(grammarAccess.getTypeAccess().getNumberEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getTRUEEnumLiteralDeclaration_0()); }
		('true')
		{ after(grammarAccess.getBooleanValueAccess().getTRUEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanValueAccess().getFALSEEnumLiteralDeclaration_1()); }
		('false')
		{ after(grammarAccess.getBooleanValueAccess().getFALSEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getStoryNameAssignment_0()); }
	(rule__Model__StoryNameAssignment_0)
	{ after(grammarAccess.getModelAccess().getStoryNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFunctionsAssignment_1()); }
	(rule__Model__FunctionsAssignment_1)*
	{ after(grammarAccess.getModelAccess().getFunctionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getScenariosAssignment_2()); }
		(rule__Model__ScenariosAssignment_2)
		{ after(grammarAccess.getModelAccess().getScenariosAssignment_2()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getScenariosAssignment_2()); }
		(rule__Model__ScenariosAssignment_2)*
		{ after(grammarAccess.getModelAccess().getScenariosAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3()); }
	(rule__Function__Group_3__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTypeAssignment_6()); }
	(rule__Function__TypeAssignment_6)
	{ after(grammarAccess.getFunctionAccess().getTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__0__Impl
	rule__Function__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getParametersAssignment_3_0()); }
	(rule__Function__ParametersAssignment_3_0)
	{ after(grammarAccess.getFunctionAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3_1()); }
	(rule__Function__Group_3_1__0)*
	{ after(grammarAccess.getFunctionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_1__0__Impl
	rule__Function__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getParametersAssignment_3_1_1()); }
	(rule__Function__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getFunctionAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Story__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Story__Group__0__Impl
	rule__Story__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryAccess().getStoryKeyword_0()); }
	'story'
	{ after(grammarAccess.getStoryAccess().getStoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Story__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryAccess().getNameAssignment_1()); }
	(rule__Story__NameAssignment_1)
	{ after(grammarAccess.getStoryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__0__Impl
	rule__Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
	'scenario'
	{ after(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__1__Impl
	rule__Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getNameAssignment_1()); }
	(rule__Scenario__NameAssignment_1)
	{ after(grammarAccess.getScenarioAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__2__Impl
	rule__Scenario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__3__Impl
	rule__Scenario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getVariablesAssignment_3()); }
	(rule__Scenario__VariablesAssignment_3)*
	{ after(grammarAccess.getScenarioAccess().getVariablesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__4__Impl
	rule__Scenario__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getStatemensAssignment_4()); }
	(rule__Scenario__StatemensAssignment_4)*
	{ after(grammarAccess.getScenarioAccess().getStatemensAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__End__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__End__Group__0__Impl
	rule__End__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__End__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAccess().getEndKeyword_0()); }
	'end'
	{ after(grammarAccess.getEndAccess().getEndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__End__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__End__Group__1__Impl
	rule__End__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__End__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAccess().getNameAssignment_1()); }
	(rule__End__NameAssignment_1)
	{ after(grammarAccess.getEndAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__End__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__End__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__End__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAccess().getEndMessageAssignment_2()); }
	(rule__End__EndMessageAssignment_2)
	{ after(grammarAccess.getEndAccess().getEndMessageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Announce__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Announce__Group__0__Impl
	rule__Announce__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnounceAccess().getAnnounceKeyword_0()); }
	'announce'
	{ after(grammarAccess.getAnnounceAccess().getAnnounceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Announce__Group__1__Impl
	rule__Announce__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnounceAccess().getNameAssignment_1()); }
	(rule__Announce__NameAssignment_1)
	{ after(grammarAccess.getAnnounceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Announce__Group__2__Impl
	rule__Announce__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnounceAccess().getTextAssignment_2()); }
	(rule__Announce__TextAssignment_2)
	{ after(grammarAccess.getAnnounceAccess().getTextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Announce__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnounceAccess().getTargetAssignment_3()); }
	(rule__Announce__TargetAssignment_3)
	{ after(grammarAccess.getAnnounceAccess().getTargetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__0__Impl
	rule__Question__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getQuestionKeyword_0()); }
	'question'
	{ after(grammarAccess.getQuestionAccess().getQuestionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__1__Impl
	rule__Question__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getNameAssignment_1()); }
	(rule__Question__NameAssignment_1)
	{ after(grammarAccess.getQuestionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__2__Impl
	rule__Question__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getTextAssignment_2()); }
	(rule__Question__TextAssignment_2)
	{ after(grammarAccess.getQuestionAccess().getTextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__3__Impl
	rule__Question__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getAsKeyword_3()); }
	'as'
	{ after(grammarAccess.getQuestionAccess().getAsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__4__Impl
	rule__Question__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getAsValueAssignment_4()); }
	(rule__Question__AsValueAssignment_4)
	{ after(grammarAccess.getQuestionAccess().getAsValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__5__Impl
	rule__Question__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getGroup_5()); }
	(rule__Question__Group_5__0)?
	{ after(grammarAccess.getQuestionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getQuestionAccess().getTargetsAssignment_6()); }
		(rule__Question__TargetsAssignment_6)
		{ after(grammarAccess.getQuestionAccess().getTargetsAssignment_6()); }
	)
	(
		{ before(grammarAccess.getQuestionAccess().getTargetsAssignment_6()); }
		(rule__Question__TargetsAssignment_6)*
		{ after(grammarAccess.getQuestionAccess().getTargetsAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group_5__0__Impl
	rule__Question__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getInKeyword_5_0()); }
	'in'
	{ after(grammarAccess.getQuestionAccess().getInKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getInVarAssignment_5_1()); }
	(rule__Question__InVarAssignment_5_1)
	{ after(grammarAccess.getQuestionAccess().getInVarAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDef__Group__0__Impl
	rule__VariableDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariableDefAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDef__Group__1__Impl
	rule__VariableDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefAccess().getNameAssignment_1()); }
	(rule__VariableDef__NameAssignment_1)
	{ after(grammarAccess.getVariableDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDef__Group__2__Impl
	rule__VariableDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getVariableDefAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefAccess().getTypeAssignment_3()); }
	(rule__VariableDef__TypeAssignment_3)
	{ after(grammarAccess.getVariableDefAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__0__Impl
	rule__Target__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getToKeyword_0()); }
	'to'
	{ after(grammarAccess.getTargetAccess().getToKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__1__Impl
	rule__Target__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getTargetAssignment_1()); }
	(rule__Target__TargetAssignment_1)
	{ after(grammarAccess.getTargetAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getGroup_2()); }
	(rule__Target__Group_2__0)?
	{ after(grammarAccess.getTargetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_2__0__Impl
	rule__Target__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getIfKeyword_2_0()); }
	'if'
	{ after(grammarAccess.getTargetAccess().getIfKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getLogicAssignment_2_1()); }
	(rule__Target__LogicAssignment_2_1)
	{ after(grammarAccess.getTargetAccess().getLogicAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__This__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__This__Group__0__Impl
	rule__This__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__This__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisAccess().getThisAction_0()); }
	()
	{ after(grammarAccess.getThisAccess().getThisAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__This__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__This__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__This__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisAccess().getThisKeyword_1()); }
	'this'
	{ after(grammarAccess.getThisAccess().getThisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group__0__Impl
	rule__LogicExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getLogicAndORParserRuleCall_0()); }
	ruleLogicAndOR
	{ after(grammarAccess.getLogicExpAccess().getLogicAndORParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getGroup_1()); }
	(rule__LogicExp__Group_1__0)*
	{ after(grammarAccess.getLogicExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1__0__Impl
	rule__LogicExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getAlternatives_1_0()); }
	(rule__LogicExp__Alternatives_1_0)
	{ after(grammarAccess.getLogicExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getRightAssignment_1_1()); }
	(rule__LogicExp__RightAssignment_1_1)
	{ after(grammarAccess.getLogicExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_0__0__Impl
	rule__LogicExp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getEqualsSignEqualsSignKeyword_1_0_0_0()); }
	'=='
	{ after(grammarAccess.getLogicExpAccess().getEqualsSignEqualsSignKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getEqualsLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getEqualsLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_1__0__Impl
	rule__LogicExp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getExclamationMarkEqualsSignKeyword_1_0_1_0()); }
	'!='
	{ after(grammarAccess.getLogicExpAccess().getExclamationMarkEqualsSignKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getNotEqualsLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getNotEqualsLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_2__0__Impl
	rule__LogicExp__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getLessThanSignKeyword_1_0_2_0()); }
	'<'
	{ after(grammarAccess.getLogicExpAccess().getLessThanSignKeyword_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getLessLeftAction_1_0_2_1()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getLessLeftAction_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_3__0__Impl
	rule__LogicExp__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getGreaterThanSignKeyword_1_0_3_0()); }
	'>'
	{ after(grammarAccess.getLogicExpAccess().getGreaterThanSignKeyword_1_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getGreaterLeftAction_1_0_3_1()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getGreaterLeftAction_1_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_4__0__Impl
	rule__LogicExp__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getLessThanSignEqualsSignKeyword_1_0_4_0()); }
	'<='
	{ after(grammarAccess.getLogicExpAccess().getLessThanSignEqualsSignKeyword_1_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getLessOrEqualsLeftAction_1_0_4_1()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getLessOrEqualsLeftAction_1_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExp__Group_1_0_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_5__0__Impl
	rule__LogicExp__Group_1_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getGreaterThanSignEqualsSignKeyword_1_0_5_0()); }
	'>='
	{ after(grammarAccess.getLogicExpAccess().getGreaterThanSignEqualsSignKeyword_1_0_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExp__Group_1_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Group_1_0_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpAccess().getGreaterOrEqualsLeftAction_1_0_5_1()); }
	()
	{ after(grammarAccess.getLogicExpAccess().getGreaterOrEqualsLeftAction_1_0_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicAndOR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicAndOR__Group__0__Impl
	rule__LogicAndOR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAndORAccess().getMathExpParserRuleCall_0()); }
	ruleMathExp
	{ after(grammarAccess.getLogicAndORAccess().getMathExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicAndOR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAndORAccess().getGroup_1()); }
	(rule__LogicAndOR__Group_1__0)*
	{ after(grammarAccess.getLogicAndORAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicAndOR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicAndOR__Group_1__0__Impl
	rule__LogicAndOR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAndORAccess().getAlternatives_1_0()); }
	(rule__LogicAndOR__Alternatives_1_0)
	{ after(grammarAccess.getLogicAndORAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicAndOR__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAndORAccess().getRightAssignment_1_1()); }
	(rule__LogicAndOR__RightAssignment_1_1)
	{ after(grammarAccess.getLogicAndORAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicAndOR__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicAndOR__Group_1_0_0__0__Impl
	rule__LogicAndOR__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAndORAccess().getAmpersandAmpersandKeyword_1_0_0_0()); }
	'&&'
	{ after(grammarAccess.getLogicAndORAccess().getAmpersandAmpersandKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicAndOR__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAndORAccess().getAndLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getLogicAndORAccess().getAndLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicAndOR__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicAndOR__Group_1_0_1__0__Impl
	rule__LogicAndOR__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAndORAccess().getVerticalLineVerticalLineKeyword_1_0_1_0()); }
	'||'
	{ after(grammarAccess.getLogicAndORAccess().getVerticalLineVerticalLineKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicAndOR__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAndORAccess().getOrLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getLogicAndORAccess().getOrLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicNot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicNot__Group__0__Impl
	rule__LogicNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicNot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicNotAccess().getLogicNotAction_0()); }
	()
	{ after(grammarAccess.getLogicNotAccess().getLogicNotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicNot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicNot__Group__1__Impl
	rule__LogicNot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicNot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicNotAccess().getExclamationMarkKeyword_1()); }
	'!'
	{ after(grammarAccess.getLogicNotAccess().getExclamationMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicNot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicNot__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicNot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicNotAccess().getRefAssignment_2()); }
	(rule__LogicNot__RefAssignment_2)
	{ after(grammarAccess.getLogicNotAccess().getRefAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parentheses__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parentheses__Group__0__Impl
	rule__Parentheses__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parentheses__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesesAccess().getParenthesesAction_0()); }
	()
	{ after(grammarAccess.getParenthesesAccess().getParenthesesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parentheses__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parentheses__Group__1__Impl
	rule__Parentheses__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parentheses__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesesAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParenthesesAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parentheses__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parentheses__Group__2__Impl
	rule__Parentheses__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parentheses__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesesAccess().getRefAssignment_2()); }
	(rule__Parentheses__RefAssignment_2)
	{ after(grammarAccess.getParenthesesAccess().getRefAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parentheses__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parentheses__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parentheses__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesesAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParenthesesAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group__0__Impl
	rule__Boolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getBooleanAction_0()); }
	()
	{ after(grammarAccess.getBooleanAccess().getBooleanAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getValAssignment_1()); }
	(rule__Boolean__ValAssignment_1)
	{ after(grammarAccess.getBooleanAccess().getValAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExp__Group__0__Impl
	rule__MathExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpAccess().getMultDivMathExpParserRuleCall_0()); }
	ruleMultDivMathExp
	{ after(grammarAccess.getMathExpAccess().getMultDivMathExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpAccess().getGroup_1()); }
	(rule__MathExp__Group_1__0)*
	{ after(grammarAccess.getMathExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExp__Group_1__0__Impl
	rule__MathExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpAccess().getAlternatives_1_0()); }
	(rule__MathExp__Alternatives_1_0)
	{ after(grammarAccess.getMathExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpAccess().getRightAssignment_1_1()); }
	(rule__MathExp__RightAssignment_1_1)
	{ after(grammarAccess.getMathExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathExp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExp__Group_1_0_0__0__Impl
	rule__MathExp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpAccess().getPlusSignKeyword_1_0_0_0()); }
	'+'
	{ after(grammarAccess.getMathExpAccess().getPlusSignKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpAccess().getPlusLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getMathExpAccess().getPlusLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathExp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExp__Group_1_0_1__0__Impl
	rule__MathExp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpAccess().getHyphenMinusKeyword_1_0_1_0()); }
	'-'
	{ after(grammarAccess.getMathExpAccess().getHyphenMinusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpAccess().getMinusLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getMathExpAccess().getMinusLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDivMathExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDivMathExp__Group__0__Impl
	rule__MultDivMathExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivMathExpAccess().getTextExpParserRuleCall_0()); }
	ruleTextExp
	{ after(grammarAccess.getMultDivMathExpAccess().getTextExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDivMathExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivMathExpAccess().getGroup_1()); }
	(rule__MultDivMathExp__Group_1__0)*
	{ after(grammarAccess.getMultDivMathExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDivMathExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDivMathExp__Group_1__0__Impl
	rule__MultDivMathExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivMathExpAccess().getAlternatives_1_0()); }
	(rule__MultDivMathExp__Alternatives_1_0)
	{ after(grammarAccess.getMultDivMathExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDivMathExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivMathExpAccess().getRightAssignment_1_1()); }
	(rule__MultDivMathExp__RightAssignment_1_1)
	{ after(grammarAccess.getMultDivMathExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDivMathExp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDivMathExp__Group_1_0_0__0__Impl
	rule__MultDivMathExp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivMathExpAccess().getAsteriskKeyword_1_0_0_0()); }
	'*'
	{ after(grammarAccess.getMultDivMathExpAccess().getAsteriskKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDivMathExp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivMathExpAccess().getMultiplicationLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getMultDivMathExpAccess().getMultiplicationLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDivMathExp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDivMathExp__Group_1_0_1__0__Impl
	rule__MultDivMathExp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivMathExpAccess().getSolidusKeyword_1_0_1_0()); }
	'/'
	{ after(grammarAccess.getMultDivMathExpAccess().getSolidusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDivMathExp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivMathExpAccess().getDivisionLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getMultDivMathExpAccess().getDivisionLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathNumberExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathNumberExp__Group__0__Impl
	rule__MathNumberExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathNumberExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathNumberExpAccess().getMathNumberExpAction_0()); }
	()
	{ after(grammarAccess.getMathNumberExpAccess().getMathNumberExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathNumberExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathNumberExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathNumberExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathNumberExpAccess().getValueAssignment_1()); }
	(rule__MathNumberExp__ValueAssignment_1)
	{ after(grammarAccess.getMathNumberExpAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextExp__Group__0__Impl
	rule__TextExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextExpAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getTextExpAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextExpAccess().getGroup_1()); }
	(rule__TextExp__Group_1__0)*
	{ after(grammarAccess.getTextExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextExp__Group_1__0__Impl
	rule__TextExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextExpAccess().getGroup_1_0()); }
	(rule__TextExp__Group_1_0__0)
	{ after(grammarAccess.getTextExpAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextExpAccess().getRightAssignment_1_1()); }
	(rule__TextExp__RightAssignment_1_1)
	{ after(grammarAccess.getTextExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextExp__Group_1_0__0__Impl
	rule__TextExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextExpAccess().getAmpersandKeyword_1_0_0()); }
	'&'
	{ after(grammarAccess.getTextExpAccess().getAmpersandKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextExp__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextExpAccess().getTextExpLeftAction_1_0_1()); }
	()
	{ after(grammarAccess.getTextExpAccess().getTextExpLeftAction_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionUsage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUsage__Group__0__Impl
	rule__FunctionUsage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUsageAccess().getFunctionUsageAction_0()); }
	()
	{ after(grammarAccess.getFunctionUsageAccess().getFunctionUsageAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUsage__Group__1__Impl
	rule__FunctionUsage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUsageAccess().getNameAssignment_1()); }
	(rule__FunctionUsage__NameAssignment_1)
	{ after(grammarAccess.getFunctionUsageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUsage__Group__2__Impl
	rule__FunctionUsage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUsageAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionUsageAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUsage__Group__3__Impl
	rule__FunctionUsage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUsageAccess().getExpsAssignment_3()); }
	(rule__FunctionUsage__ExpsAssignment_3)
	{ after(grammarAccess.getFunctionUsageAccess().getExpsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUsage__Group__4__Impl
	rule__FunctionUsage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUsageAccess().getGroup_4()); }
	(rule__FunctionUsage__Group_4__0)*
	{ after(grammarAccess.getFunctionUsageAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUsage__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUsageAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFunctionUsageAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionUsage__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUsage__Group_4__0__Impl
	rule__FunctionUsage__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUsageAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getFunctionUsageAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUsage__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUsageAccess().getExpsAssignment_4_1()); }
	(rule__FunctionUsage__ExpsAssignment_4_1)
	{ after(grammarAccess.getFunctionUsageAccess().getExpsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextLiteral__Group__0__Impl
	rule__TextLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextLiteralAccess().getTextLiteralAction_0()); }
	()
	{ after(grammarAccess.getTextLiteralAccess().getTextLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextLiteralAccess().getTextAssignment_1()); }
	(rule__TextLiteral__TextAssignment_1)
	{ after(grammarAccess.getTextLiteralAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarUse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarUse__Group__0__Impl
	rule__VarUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarUse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarUseAccess().getVarUseAction_0()); }
	()
	{ after(grammarAccess.getVarUseAccess().getVarUseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarUse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarUse__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarUse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarUseAccess().getRefAssignment_1()); }
	(rule__VarUse__RefAssignment_1)
	{ after(grammarAccess.getVarUseAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeUsage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeUsage__Group__0__Impl
	rule__TypeUsage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeUsage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeUsageAccess().getTypeUsageAction_0()); }
	()
	{ after(grammarAccess.getTypeUsageAccess().getTypeUsageAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeUsage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeUsage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeUsage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeUsageAccess().getTypeAssignment_1()); }
	(rule__TypeUsage__TypeAssignment_1)
	{ after(grammarAccess.getTypeUsageAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__StoryNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStoryNameStoryParserRuleCall_0_0()); }
		ruleStory
		{ after(grammarAccess.getModelAccess().getStoryNameStoryParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FunctionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0()); }
		ruleFunction
		{ after(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScenariosAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScenariosScenarioParserRuleCall_2_0()); }
		ruleScenario
		{ after(grammarAccess.getModelAccess().getScenariosScenarioParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getParametersTypeUsageParserRuleCall_3_0_0()); }
		ruleTypeUsage
		{ after(grammarAccess.getFunctionAccess().getParametersTypeUsageParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getParametersTypeUsageParserRuleCall_3_1_1_0()); }
		ruleTypeUsage
		{ after(grammarAccess.getFunctionAccess().getParametersTypeUsageParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTypeTypeEnumRuleCall_6_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getTypeTypeEnumRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStoryAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScenarioAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__VariablesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getVariablesVariableDefParserRuleCall_3_0()); }
		ruleVariableDef
		{ after(grammarAccess.getScenarioAccess().getVariablesVariableDefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__StatemensAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getStatemensStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getScenarioAccess().getStatemensStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__End__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEndAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__End__EndMessageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAccess().getEndMessageLogicExpParserRuleCall_2_0()); }
		ruleLogicExp
		{ after(grammarAccess.getEndAccess().getEndMessageLogicExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnounceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAnnounceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__TextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnounceAccess().getTextLogicExpParserRuleCall_2_0()); }
		ruleLogicExp
		{ after(grammarAccess.getAnnounceAccess().getTextLogicExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__TargetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnounceAccess().getTargetTargetParserRuleCall_3_0()); }
		ruleTarget
		{ after(grammarAccess.getAnnounceAccess().getTargetTargetParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__TextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getTextLogicExpParserRuleCall_2_0()); }
		ruleLogicExp
		{ after(grammarAccess.getQuestionAccess().getTextLogicExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__AsValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getAsValueLogicExpParserRuleCall_4_0()); }
		ruleLogicExp
		{ after(grammarAccess.getQuestionAccess().getAsValueLogicExpParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__InVarAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getInVarVarUseParserRuleCall_5_1_0()); }
		ruleVarUse
		{ after(grammarAccess.getQuestionAccess().getInVarVarUseParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__TargetsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getTargetsTargetParserRuleCall_6_0()); }
		ruleTarget
		{ after(grammarAccess.getQuestionAccess().getTargetsTargetParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefAccess().getTypeTypeEnumRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getVariableDefAccess().getTypeTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetAccess().getTargetTargetTargetCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTargetAccess().getTargetTargetTargetIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTargetAccess().getTargetTargetTargetIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTargetAccess().getTargetTargetTargetCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__LogicAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetAccess().getLogicLogicExpParserRuleCall_2_1_0()); }
		ruleLogicExp
		{ after(grammarAccess.getTargetAccess().getLogicLogicExpParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpAccess().getRightLogicAndORParserRuleCall_1_1_0()); }
		ruleLogicAndOR
		{ after(grammarAccess.getLogicExpAccess().getRightLogicAndORParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicAndOR__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAndORAccess().getRightMathExpParserRuleCall_1_1_0()); }
		ruleMathExp
		{ after(grammarAccess.getLogicAndORAccess().getRightMathExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicNot__RefAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicNotAccess().getRefPrimaryParserRuleCall_2_0()); }
		rulePrimary
		{ after(grammarAccess.getLogicNotAccess().getRefPrimaryParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parentheses__RefAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesesAccess().getRefLogicExpParserRuleCall_2_0()); }
		ruleLogicExp
		{ after(grammarAccess.getParenthesesAccess().getRefLogicExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__ValAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getValBooleanValueEnumRuleCall_1_0()); }
		ruleBooleanValue
		{ after(grammarAccess.getBooleanAccess().getValBooleanValueEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathExpAccess().getRightMultDivMathExpParserRuleCall_1_1_0()); }
		ruleMultDivMathExp
		{ after(grammarAccess.getMathExpAccess().getRightMultDivMathExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDivMathExp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivMathExpAccess().getRightTextExpParserRuleCall_1_1_0()); }
		ruleTextExp
		{ after(grammarAccess.getMultDivMathExpAccess().getRightTextExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathNumberExp__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathNumberExpAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getMathNumberExpAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextExpAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getTextExpAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionUsageAccess().getNameFunctionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getFunctionUsageAccess().getNameFunctionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionUsageAccess().getNameFunctionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getFunctionUsageAccess().getNameFunctionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__ExpsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionUsageAccess().getExpsLogicExpParserRuleCall_3_0()); }
		ruleLogicExp
		{ after(grammarAccess.getFunctionUsageAccess().getExpsLogicExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUsage__ExpsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionUsageAccess().getExpsLogicExpParserRuleCall_4_1_0()); }
		ruleLogicExp
		{ after(grammarAccess.getFunctionUsageAccess().getExpsLogicExpParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextLiteral__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextLiteralAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextLiteralAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarUse__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarUseAccess().getRefVariableDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVarUseAccess().getRefVariableDefIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVarUseAccess().getRefVariableDefIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVarUseAccess().getRefVariableDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeUsage__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeUsageAccess().getTypeTypeEnumRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getTypeUsageAccess().getTypeTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
