/*
 * generated by Xtext 2.26.0
 */
grammar InternalMath;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.mmmi.mdsd.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.mmmi.mdsd.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.mmmi.mdsd.services.MathGrammarAccess;

}
@parser::members {
	private MathGrammarAccess grammarAccess;

	public void setGrammarAccess(MathGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProgramName
entryRuleProgramName
:
{ before(grammarAccess.getProgramNameRule()); }
	 ruleProgramName
{ after(grammarAccess.getProgramNameRule()); } 
	 EOF 
;

// Rule ProgramName
ruleProgramName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramNameAccess().getGroup()); }
		(rule__ProgramName__Group__0)
		{ after(grammarAccess.getProgramNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternal
entryRuleExternal
:
{ before(grammarAccess.getExternalRule()); }
	 ruleExternal
{ after(grammarAccess.getExternalRule()); } 
	 EOF 
;

// Rule External
ruleExternal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalAccess().getGroup()); }
		(rule__External__Group__0)
		{ after(grammarAccess.getExternalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalUse
entryRuleExternalUse
:
{ before(grammarAccess.getExternalUseRule()); }
	 ruleExternalUse
{ after(grammarAccess.getExternalUseRule()); } 
	 EOF 
;

// Rule ExternalUse
ruleExternalUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalUseAccess().getGroup()); }
		(rule__ExternalUse__Group__0)
		{ after(grammarAccess.getExternalUseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableAssignment
entryRuleVariableAssignment
:
{ before(grammarAccess.getVariableAssignmentRule()); }
	 ruleVariableAssignment
{ after(grammarAccess.getVariableAssignmentRule()); } 
	 EOF 
;

// Rule VariableAssignment
ruleVariableAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAssignmentAccess().getGroup()); }
		(rule__VariableAssignment__Group__0)
		{ after(grammarAccess.getVariableAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getGroup()); }
		(rule__Exp__Group__0)
		{ after(grammarAccess.getExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultDiv
entryRuleMultDiv
:
{ before(grammarAccess.getMultDivRule()); }
	 ruleMultDiv
{ after(grammarAccess.getMultDivRule()); } 
	 EOF 
;

// Rule MultDiv
ruleMultDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultDivAccess().getGroup()); }
		(rule__MultDiv__Group__0)
		{ after(grammarAccess.getMultDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParenthesis
entryRuleParenthesis
:
{ before(grammarAccess.getParenthesisRule()); }
	 ruleParenthesis
{ after(grammarAccess.getParenthesisRule()); } 
	 EOF 
;

// Rule Parenthesis
ruleParenthesis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesisAccess().getGroup()); }
		(rule__Parenthesis__Group__0)
		{ after(grammarAccess.getParenthesisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getGroup()); }
		(rule__Number__Group__0)
		{ after(grammarAccess.getNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableUse
entryRuleVariableUse
:
{ before(grammarAccess.getVariableUseRule()); }
	 ruleVariableUse
{ after(grammarAccess.getVariableUseRule()); } 
	 EOF 
;

// Rule VariableUse
ruleVariableUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableUseAccess().getGroup()); }
		(rule__VariableUse__Group__0)
		{ after(grammarAccess.getVariableUseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalAssignment
entryRuleLocalAssignment
:
{ before(grammarAccess.getLocalAssignmentRule()); }
	 ruleLocalAssignment
{ after(grammarAccess.getLocalAssignmentRule()); } 
	 EOF 
;

// Rule LocalAssignment
ruleLocalAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalAssignmentAccess().getGroup()); }
		(rule__LocalAssignment__Group__0)
		{ after(grammarAccess.getLocalAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_0()); }
		(rule__Exp__Group_1_0_0__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_1()); }
		(rule__Exp__Group_1_0_1__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getGroup_1_0_0()); }
		(rule__MultDiv__Group_1_0_0__0)
		{ after(grammarAccess.getMultDivAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultDivAccess().getGroup_1_0_1()); }
		(rule__MultDiv__Group_1_0_1__0)
		{ after(grammarAccess.getMultDivAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNumberParserRuleCall_0()); }
		ruleNumber
		{ after(grammarAccess.getPrimaryAccess().getNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1()); }
		ruleParenthesis
		{ after(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getVariableUseParserRuleCall_2()); }
		ruleVariableUse
		{ after(grammarAccess.getPrimaryAccess().getVariableUseParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getLocalAssignmentParserRuleCall_3()); }
		ruleLocalAssignment
		{ after(grammarAccess.getPrimaryAccess().getLocalAssignmentParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getExternalUseParserRuleCall_4()); }
		ruleExternalUse
		{ after(grammarAccess.getPrimaryAccess().getExternalUseParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramNameAssignment_0()); }
	(rule__Program__ProgramNameAssignment_0)
	{ after(grammarAccess.getProgramAccess().getProgramNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getExternalsAssignment_1()); }
	(rule__Program__ExternalsAssignment_1)*
	{ after(grammarAccess.getProgramAccess().getExternalsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgramAccess().getVariableAssignmentsAssignment_2()); }
		(rule__Program__VariableAssignmentsAssignment_2)
		{ after(grammarAccess.getProgramAccess().getVariableAssignmentsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getProgramAccess().getVariableAssignmentsAssignment_2()); }
		(rule__Program__VariableAssignmentsAssignment_2)*
		{ after(grammarAccess.getProgramAccess().getVariableAssignmentsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramName__Group__0__Impl
	rule__ProgramName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramNameAccess().getProgramKeyword_0()); }
	'program'
	{ after(grammarAccess.getProgramNameAccess().getProgramKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramNameAccess().getNameAssignment_1()); }
	(rule__ProgramName__NameAssignment_1)
	{ after(grammarAccess.getProgramNameAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__External__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__0__Impl
	rule__External__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getExternalAction_0()); }
	()
	{ after(grammarAccess.getExternalAccess().getExternalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__1__Impl
	rule__External__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getExternalKeyword_1()); }
	'external'
	{ after(grammarAccess.getExternalAccess().getExternalKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__2__Impl
	rule__External__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getNameAssignment_2()); }
	(rule__External__NameAssignment_2)
	{ after(grammarAccess.getExternalAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__3__Impl
	rule__External__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getExternalAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__4__Impl
	rule__External__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getParametersAssignment_4()); }
	(rule__External__ParametersAssignment_4)?
	{ after(grammarAccess.getExternalAccess().getParametersAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__5__Impl
	rule__External__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getGroup_5()); }
	(rule__External__Group_5__0)*
	{ after(grammarAccess.getExternalAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getExternalAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__External__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group_5__0__Impl
	rule__External__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getExternalAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getParametersAssignment_5_1()); }
	(rule__External__ParametersAssignment_5_1)
	{ after(grammarAccess.getExternalAccess().getParametersAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalUse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__0__Impl
	rule__ExternalUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getExternalUseAction_0()); }
	()
	{ after(grammarAccess.getExternalUseAccess().getExternalUseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__1__Impl
	rule__ExternalUse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getRefAssignment_1()); }
	(rule__ExternalUse__RefAssignment_1)
	{ after(grammarAccess.getExternalUseAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__2__Impl
	rule__ExternalUse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExternalUseAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__3__Impl
	rule__ExternalUse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getExpAssignment_3()); }
	(rule__ExternalUse__ExpAssignment_3)?
	{ after(grammarAccess.getExternalUseAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__4__Impl
	rule__ExternalUse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getGroup_4()); }
	(rule__ExternalUse__Group_4__0)*
	{ after(grammarAccess.getExternalUseAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getExternalUseAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalUse__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group_4__0__Impl
	rule__ExternalUse__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getExternalUseAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getExpAssignment_4_1()); }
	(rule__ExternalUse__ExpAssignment_4_1)
	{ after(grammarAccess.getExternalUseAccess().getExpAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableAssignment__Group__0__Impl
	rule__VariableAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAssignmentAccess().getVariableAssignmentAction_0()); }
	()
	{ after(grammarAccess.getVariableAssignmentAccess().getVariableAssignmentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableAssignment__Group__1__Impl
	rule__VariableAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAssignmentAccess().getVarKeyword_1()); }
	'var'
	{ after(grammarAccess.getVariableAssignmentAccess().getVarKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableAssignment__Group__2__Impl
	rule__VariableAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAssignmentAccess().getNameAssignment_2()); }
	(rule__VariableAssignment__NameAssignment_2)
	{ after(grammarAccess.getVariableAssignmentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableAssignment__Group__3__Impl
	rule__VariableAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAssignmentAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getVariableAssignmentAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableAssignment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAssignmentAccess().getExpAssignment_4()); }
	(rule__VariableAssignment__ExpAssignment_4)
	{ after(grammarAccess.getVariableAssignmentAccess().getExpAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__0__Impl
	rule__Exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getMultDivParserRuleCall_0()); }
	ruleMultDiv
	{ after(grammarAccess.getExpAccess().getMultDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getGroup_1()); }
	(rule__Exp__Group_1__0)*
	{ after(grammarAccess.getExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__0__Impl
	rule__Exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getAlternatives_1_0()); }
	(rule__Exp__Alternatives_1_0)
	{ after(grammarAccess.getExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
	(rule__Exp__RightAssignment_1_1)
	{ after(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__0__Impl
	rule__Exp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_0()); }
	'+'
	{ after(grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_1__0__Impl
	rule__Exp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_0()); }
	'-'
	{ after(grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getMinusLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getExpAccess().getMinusLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group__0__Impl
	rule__MultDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMultDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getGroup_1()); }
	(rule__MultDiv__Group_1__0)*
	{ after(grammarAccess.getMultDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1__0__Impl
	rule__MultDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getAlternatives_1_0()); }
	(rule__MultDiv__Alternatives_1_0)
	{ after(grammarAccess.getMultDivAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getRightAssignment_1_1()); }
	(rule__MultDiv__RightAssignment_1_1)
	{ after(grammarAccess.getMultDivAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_0_0__0__Impl
	rule__MultDiv__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getAsteriskKeyword_1_0_0_0()); }
	'*'
	{ after(grammarAccess.getMultDivAccess().getAsteriskKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getMultiplicationLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getMultDivAccess().getMultiplicationLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_0_1__0__Impl
	rule__MultDiv__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getSolidusKeyword_1_0_1_0()); }
	'/'
	{ after(grammarAccess.getMultDivAccess().getSolidusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getDivisionLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getMultDivAccess().getDivisionLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthesis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__0__Impl
	rule__Parenthesis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getParenthesisAction_0()); }
	()
	{ after(grammarAccess.getParenthesisAccess().getParenthesisAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__1__Impl
	rule__Parenthesis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__2__Impl
	rule__Parenthesis__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getExpAssignment_2()); }
	(rule__Parenthesis__ExpAssignment_2)
	{ after(grammarAccess.getParenthesisAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getExplicitNumberAction_0()); }
	()
	{ after(grammarAccess.getNumberAccess().getExplicitNumberAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getValueAssignment_1()); }
	(rule__Number__ValueAssignment_1)
	{ after(grammarAccess.getNumberAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableUse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableUse__Group__0__Impl
	rule__VariableUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableUse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableUseAccess().getVarUseAction_0()); }
	()
	{ after(grammarAccess.getVariableUseAccess().getVarUseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableUse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableUse__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableUse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableUseAccess().getRefAssignment_1()); }
	(rule__VariableUse__RefAssignment_1)
	{ after(grammarAccess.getVariableUseAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAssignmentAction_0()); }
	()
	{ after(grammarAccess.getAssignmentAccess().getAssignmentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getNameAssignment_1()); }
	(rule__Assignment__NameAssignment_1)
	{ after(grammarAccess.getAssignmentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpAssignment_3()); }
	(rule__Assignment__ExpAssignment_3)
	{ after(grammarAccess.getAssignmentAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalAssignment__Group__0__Impl
	rule__LocalAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAssignmentAccess().getLocalAction_0()); }
	()
	{ after(grammarAccess.getLocalAssignmentAccess().getLocalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalAssignment__Group__1__Impl
	rule__LocalAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAssignmentAccess().getLetKeyword_1()); }
	'let'
	{ after(grammarAccess.getLocalAssignmentAccess().getLetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalAssignment__Group__2__Impl
	rule__LocalAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAssignmentAccess().getAssignmentAssignment_2()); }
	(rule__LocalAssignment__AssignmentAssignment_2)
	{ after(grammarAccess.getLocalAssignmentAccess().getAssignmentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalAssignment__Group__3__Impl
	rule__LocalAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAssignmentAccess().getInKeyword_3()); }
	'in'
	{ after(grammarAccess.getLocalAssignmentAccess().getInKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalAssignment__Group__4__Impl
	rule__LocalAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAssignmentAccess().getExpAssignment_4()); }
	(rule__LocalAssignment__ExpAssignment_4)
	{ after(grammarAccess.getLocalAssignmentAccess().getExpAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalAssignment__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAssignmentAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getLocalAssignmentAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__ProgramNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProgramNameProgramNameParserRuleCall_0_0()); }
		ruleProgramName
		{ after(grammarAccess.getProgramAccess().getProgramNameProgramNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ExternalsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getExternalsExternalParserRuleCall_1_0()); }
		ruleExternal
		{ after(grammarAccess.getProgramAccess().getExternalsExternalParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__VariableAssignmentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getVariableAssignmentsVariableAssignmentParserRuleCall_2_0()); }
		ruleVariableAssignment
		{ after(grammarAccess.getProgramAccess().getVariableAssignmentsVariableAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramName__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramNameAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProgramNameAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__ParametersAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalAccess().getParametersIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalAccess().getParametersIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__ParametersAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalAccess().getParametersIDTerminalRuleCall_5_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalAccess().getParametersIDTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalUseAccess().getRefExternalCrossReference_1_0()); }
		(
			{ before(grammarAccess.getExternalUseAccess().getRefExternalIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExternalUseAccess().getRefExternalIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getExternalUseAccess().getRefExternalCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalUseAccess().getExpExpParserRuleCall_3_0()); }
		ruleExp
		{ after(grammarAccess.getExternalUseAccess().getExpExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__ExpAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalUseAccess().getExpExpParserRuleCall_4_1_0()); }
		ruleExp
		{ after(grammarAccess.getExternalUseAccess().getExpExpParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAssignmentAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAssignmentAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__ExpAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAssignmentAccess().getExpExpParserRuleCall_4_0()); }
		ruleExp
		{ after(grammarAccess.getVariableAssignmentAccess().getExpExpParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getRightMultDivParserRuleCall_1_1_0()); }
		ruleMultDiv
		{ after(grammarAccess.getExpAccess().getRightMultDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getMultDivAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesisAccess().getExpExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getParenthesisAccess().getExpExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableUse__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableUseAccess().getRefVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableUseAccess().getRefVariableIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableUseAccess().getRefVariableIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableUseAccess().getRefVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpExpParserRuleCall_3_0()); }
		ruleExp
		{ after(grammarAccess.getAssignmentAccess().getExpExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__AssignmentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAssignmentAccess().getAssignmentAssignmentParserRuleCall_2_0()); }
		ruleAssignment
		{ after(grammarAccess.getLocalAssignmentAccess().getAssignmentAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAssignment__ExpAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAssignmentAccess().getExpExpParserRuleCall_4_0()); }
		ruleExp
		{ after(grammarAccess.getLocalAssignmentAccess().getExpExpParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
